name: Developer Pre-Release Check

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'develop'
      VERSION:
        description: 'version_to_check'
        required: true

jobs:
  pre-release-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Extract Maven Properties
        id: extract_maven_properties
        run: |
          MAVEN_PROPERTIES=$(awk -F '[><]' '/<properties>/{flag=1;next}/<\/properties>/{flag=0}flag{gsub(/^[ \t]+|[ \t]+$/, ""); printf "%s ", $1}END{print ""}' pre-registration/pom.xml)
          echo "MAVEN_PROPERTIES=${MAVEN_PROPERTIES}" >> $GITHUB_ENV

      - name: List Artifacts and Dependency Versions
        run: |
          find . -name 'pom.xml' -exec awk -F'[><]' '/<artifactId>io.mosip/{artifact=$3} /<version>/{printf("Artifact version %s found in %s for artifact %s\n", $3, FILENAME, artifact)}' {} +

      - name: Replace Maven Properties in POM Files
        run: |
          for property in maven.compiler.version maven.jar.plugin.version maven.war.plugin.version maven.surefire.plugin.version maven.jacoco.version maven.javadoc.version; do
            sed -i "s|${property}|${MAVEN_PROPERTIES}|g" **/pom.xml
          done


      - name: Check Dynamically Provided Artifact Version
        run: |
          version_to_check="${{ inputs.VERSION }}"
          if ! grep -r -E "<artifactId>io.mosip[^<]+</artifactId>|<version>${version_to_check}</version>" --include="pom.xml" . | \
          grep "<version>${version_to_check}</version>" | awk -F: '{printf "%-70s %s\n", $1, $2}'; then
            echo "Error: Dynamically provided artifact version '${version_to_check}' not found for io.mosip artifacts."
            exit 1
          fi

