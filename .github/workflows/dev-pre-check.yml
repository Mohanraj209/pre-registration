name: Developer Pre-Release Check

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'develop'
      VERSION:
        description: 'version_to_check'
        required: true

jobs:
  pre-release-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Replace Maven Compiler Version
        run: |
          MAVEN_COMPILER_VERSION=$(mvn help:evaluate -Dexpression=maven.compiler.version -q -DforceStdout)
          find . -name 'pom.xml' -exec sed -i "s|${{ env.MAVEN_COMPILER_VERSION }}|${MAVEN_COMPILER_VERSION}|g" {} +

      - name: Replace Maven Compiler Version
        run: |
          MAVEN_COMPILER_VERSION=$(mvn help:evaluate -Dexpression=maven.compiler.version -q -DforceStdout)
          for pom_file in $(find . -name 'pom.xml'); do
            sed -i "s|<version>\${maven.compiler.version}</version>|<version>${MAVEN_COMPILER_VERSION}</version>|g" "$pom_file"
          done
      # Repeat the above pattern for other properties

      - name: List Artifacts and Dependency Versions
        run: |
          find . -name 'pom.xml' -exec grep -E -o '<artifactId>[^<]+</artifactId>|<version>[^<]+</version>' {} \; | \
          xargs awk 'BEGIN {ORS="\n"} /^<artifactId>/ {artifact=$0} /<version>/ {printf("Artifact version %s found in %s for artifact %s\n", $0, FILENAME, artifact)}' | \
          grep -E '<artifactId>io.mosip[^<]+</artifactId>|<version>[^<]+</version>'
      - name: Check Dynamically Provided Artifact Version
        run: |
          version_to_check="${{ inputs.VERSION }}"
          if ! grep -r -E "<artifactId>io.mosip[^<]+</artifactId>|<version>${version_to_check}</version>" --include="pom.xml" . | \
          grep "<version>${version_to_check}</version>" | awk -F: '{printf "%-70s %s\n", $1, $2}'; then
            echo "Error: Dynamically provided artifact version '${version_to_check}' not found for io.mosip artifacts."
            exit 1
          fi

